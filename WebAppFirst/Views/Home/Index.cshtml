@using System.Globalization
@model WebAppFirst.Models.Logins
@{
    ViewBag.Title = "Home Page";
}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

@*JQuery, joka suoritetaan aina, kun sivu latautuu*@
@section scripts {
    <script type="text/javascript">
        $(window).on('load', function () {
            if (@ViewBag.LoginError == 1) {
            $('#LoginRuutu').modal('show');
            }
        });

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        }); //kaavio loppuu

        var ctx = document.getElementById('myChart2').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: ['Volvo', 'Nissan', 'BMW', 'Audi', 'Skoda', 'Toyota'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(30, 35, 18, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(30, 35, 18, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        }); //kaavio loppuu

        var ctx = document.getElementById('myChart3').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Pioneer', 'Marantz', 'Yamaha', 'Luxman', 'Rotel', 'Dual', 'Denon'],
                datasets: [{
                    label: '# of Votes',
                    data: [12, 19, 3, 5, 2, 30, 8],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(30, 35, 18, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(30, 35, 18, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        }); //kaavio loppuu


     </script>
}

<div class="jumbotron">
    <h1>Northwind Demo App</h1>
    @*Bootstrap4/SVG-ikonit*@
    <p><a href="https://asp.net" class="btn btn-primary btn-lg"><img src="~/Icons/star-fill.svg" alt="ASP.NET" width="32" height="32" title="ASP.NET"> ASP.NET-sivut &raquo;</a></p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg"><img src="~/Icons/star-fill.svg" alt="ASP.NET" width="32" height="32" title="ASP.NET"></a></p>
    <p><a href="https://asp.net"><img src="~/Icons/star-fill.svg" alt="ASP.NET" width="32" height="32" title="ASP.NET"></a></p>
    @*FAS (Font Awesome) -ikonit*@
    <p><a href="https://asp.net" class="btn btn-primary btn-lg fas fa-car"> ASP.NET-sivut</a></p>
    <p><a href="https://asp.net" class="fas fa-car" title="ASP.NET-sivut"></a></p>
    <h1>Tämä on Northwind-sovelluksen working demo</h1>

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-4">
                <canvas id="myChart"></canvas>
            </div>
            <div class="col-sm-4">
                <canvas id="myChart2"></canvas>
            </div>
            <div class="col-sm-4">
                <canvas id="myChart3"></canvas>
            </div>
        </div>
    </div>

    @*Modal-tyyppisen ikkunan avauspainike*@
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#LoginRuutu">Avaa Modal-ikkuna</button>

    @*Modal-tyyppisen ikkunan koodiesimerkki*@
    <div class="modal" id="LoginRuutu">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Kirjautuminen Northwind-järjestelmään</h3>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Authorize", "Home", FormMethod.Post, new { id = "loginForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.LoginId)
                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PassWord, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <label class="text-danger">
                                @Html.DisplayFor(model => model.LoginErrorMessage)
                            </label>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <div>
                    @*Formin lähettävä button, joka ei ole formin sisällä mutta viittaa formin id:hen*@
                    <button type="submit" class="btn btn-primary" form="loginForm"><i class="fas fa-check"></i></button>
                    @*Kontrollerin kutsu Url.Action komennolla, jotta peruuttaminen johtaa alkutilanteeseen*@
                    <a href="@Url.Action("Index", "Home")" class="btn btn-primary"><i class="fas fa-times"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @for (int i = 0; i < 10; i++)
    {
        <p>@i</p>
    }

    <p>Nyt on @DateTime.Now</p>
    <p>Nyt on @DateTime.Now.ToString(new CultureInfo("en-US"))</p>
</div>

